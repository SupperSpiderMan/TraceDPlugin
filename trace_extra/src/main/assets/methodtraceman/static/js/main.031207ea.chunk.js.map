{"version":3,"sources":["websocket/WebscoketEngine.js","Mock.js","widget/LeftSider.js","store/actionTypes.js","store/reducers/methodReducer.js","store/reducers/index.js","store/index.js","store/actionCreators.js","event/eventBus.js","components/MethodCostLayout.js","widget/RightContent.js","widget/TagViews.js","App.js","serviceWorker.js","index.js"],"names":["isReady","webSocketEngine","WebSocketEngine","Object","classCallCheck","this","isWebSocketReady","_receiveMessage","bind","onReady","ws","WebSocket","window","location","host","addEventListener","message","send","e","JSON","parse","data","console","log","stringify","receiveMessageCallback","code","moduleName","payload","callback","Mock","refreshMock","recvFun","setInterval","appName","labels","Sider","Layout","LeftSider","props","_this","possibleConstructorReturn","getPrototypeOf","call","onCollapse","collapsed","setState","state","react_default","a","createElement","theme","collapsedWidth","collapsible","menu","style","marginTop","defaultSelectedKeys","mode","Item","key","disabled","react_router_dom","to","icon","type","Component","UPDATE_APPINFO","UPDATE_METHOD_COST","CLEAR_METHOD_COST","defaultState","AppInfo","methodInfoList","combineReducers","methodReducer","arguments","length","undefined","action","assign","value","store","createStore","reducer","__REDUX_DEVTOOLS_EXTENSION__","clearMethodCost","ActionType","eventBus","EventEmitter","Option","Select","Search","Input","filterMethodTag","timeLimit","MethodCostLayout","_refreshData","getState","methodCostList","_filterMethod","timeFilter","threadFilter","result","forEach","element","costTime","threadMode","isMainThread","threadFilterInt","parseInt","name","search","push","_getCostTimeColor","color","_handleTimeFilterChange","_handleThreadFilterChange","_clickStartMethodCost","isStartState","dispatch","Bus","emit","loading","destroy","success","_filterMethodTag","unsubscribe","subscribe","config","top","_this2","resultList","startBtnText","startBtnType","height","es_button","ghost","marginLeft","width","onClick","es_select","defaultValue","onChange","placeholder","onSearch","enterButton","overflow","list","itemLayout","dataSource","renderItem","itemData","index","className","display","flexDirection","justifyContent","float","fontSize","twoToneColor","marginRight","concat","Content","Footer","RightContent","layout","margin","padding","background","react_router","exact","path","component","textAlign","colors","TagViews","tags","getTagViews","tagViews","count","tag","marginBottom","Header","App","_registerEventBus","addListener","msg","websocketEngine","start","evt","sendMessage","error","_testData","setTimeout","_onReceiveMessage","endPos","startPos","assertThisInitialized","mock","setReceiveMessageCallback","removeAllListeners","appInfo","updateMethodCostInfo","minHeight","paddingLeft","fontWeight","widget_TagViews","widget_LeftSider","widget_RightContent","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.031207ea.chunk.js","sourcesContent":["\nvar isReady = false\nclass WebSocketEngine {\n\n    constructor() {\n        this._receiveMessage = this._receiveMessage.bind(this);\n\n    }\n\n    start(onReady) {\n        this.ws = new WebSocket(\"ws://\" + window.location.host + \"/refresh\");\n        this.ws.addEventListener('open', () => {\n            isReady = true\n            onReady()\n        });\n        this.ws.addEventListener('message', this._receiveMessage);\n    }\n\n    sendMessage(message) {\n        this.ws.send(message);\n    }\n\n    isWebSocketReady = () => {\n        return isReady\n    }\n\n    _receiveMessage(e) {\n        let message = JSON.parse(e.data);\n        console.log(\"received message:\" + JSON.stringify(e.data));\n        if (this.receiveMessageCallback) {\n            if (message.code === 1) {\n                this.receiveMessageCallback(message.data.moduleName, message.data.payload);\n            } else {\n                console.log('Error for biz:', message)\n            }\n        }\n    }\n\n    setReceiveMessageCallback(callback) {\n        this.receiveMessageCallback = callback;\n    }\n}\n\nconst webSocketEngine = new WebSocketEngine();\n\nexport default webSocketEngine;","class Mock {\n\n    constructor() {\n        this.refreshMock = this.refreshMock.bind(this);\n        this.recvFun = null;\n    }\n\n\n    start(recvFun) {\n        this.recvFun = recvFun;\n        setInterval(this.refreshMock, 2000);\n    }\n\n    refreshMock() {\n        this.recvFun(\"appInfo\", {\n            appName: \"I am Name\",\n            labels: [\"label1\", \"label2\", \"label3\"]\n        });\n    }\n\n}\n\n\nexport default Mock","import React, { Component } from 'react';\nimport { Layout, Icon, Menu, Tag } from 'antd';\nimport 'antd/dist/antd.css'\nimport { Link } from 'react-router-dom'\n\nconst { Sider } = Layout;\n\nclass LeftSider extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            collapsed: false,\n        }\n    }\n\n    onCollapse = collapsed => {\n        console.log(collapsed);\n        this.setState({ collapsed });\n    };\n\n\n    render() {\n        return (\n            <Sider theme='dark' collapsedWidth='0' collapsible collapsed={this.state.collapsed} onCollapse={this.onCollapse}>\n                <div>\n\n                </div>\n                <Menu style={{ marginTop: 25 }} theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\">\n                    <Menu.Item key=\"1\"\n                        disabled={false}>\n                        <Link\n                            to={'/methodCost'}>\n                            <Icon type=\"file\" />\n                            <span>方法耗时</span>\n                        </Link>\n\n                    </Menu.Item>\n                </Menu>\n            </Sider>);\n    }\n}\n\nexport default LeftSider;\n\n\n\n","\nexport const UPDATE_APPINFO = 'update_appInfo'\n\n//methodCost\nexport const UPDATE_METHOD_COST = \"update_methodcost\"\nexport const CLEAR_METHOD_COST = \"clear_methodcost\"","import { UPDATE_METHOD_COST, CLEAR_METHOD_COST, UPDATE_APPINFO } from \"../actionTypes\";\n\nconst defaultState = {\n    AppInfo: null,\n    methodInfoList: []\n}\n\nexport default function methodProducer(state = defaultState, action) {\n    switch (action.type) {\n        case UPDATE_METHOD_COST:\n            return Object.assign({}, state, {\n                methodInfoList: action.value\n            })\n        case CLEAR_METHOD_COST:\n            return Object.assign({}, state, {\n                methodInfoList: []\n            })\n        case UPDATE_APPINFO:\n            return Object.assign({}, state, {\n                AppInfo: action.value\n            })\n        default:\n            return state\n    }\n}","import { combineReducers } from 'redux'\nimport methodReducer from \"./methodReducer\";\n\nexport default combineReducers({\n    methodReducer\n})","import { createStore } from 'redux'\nimport reducer from './reducers/index'\n\nlet store = createStore(reducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\nexport default store","import * as ActionType from \"./actionTypes\";\n\n//appInfo\nexport const updateAppInfo = (value) => ({\n    type: ActionType.UPDATE_APPINFO,\n    value\n})\n\n\n\n//methodCost\nexport const updateMethodCostInfo = (value) => ({\n    type: ActionType.UPDATE_METHOD_COST,\n    value\n})\n\nexport const clearMethodCost = () => ({\n    type: ActionType.CLEAR_METHOD_COST\n})\n\n\n","import {EventEmitter} from 'events';\nexport default new EventEmitter();","import React, { Component } from 'react';\nimport { List, message, Icon } from 'antd'\nimport store from '../store/index'\nimport { Select } from 'antd';\nimport { Input, Button } from 'antd';\nimport { clearMethodCost } from '../store/actionCreators';\nimport Bus from '../event/eventBus'\n\nconst { Option } = Select;\nconst { Search } = Input;\n\nvar filterMethodTag = \"\"\nconst timeLimit = 16\nclass MethodCostLayout extends Component {\n    constructor(props) {\n        super(props);\n        let { methodInfoList } = store.getState().methodReducer\n        this.state = {\n            methodCostList: methodInfoList,\n            timeFilter: -1,\n            threadFilter: -1,\n            isStartState: true\n        }\n        this.unsubscribe = store.subscribe(this._refreshData)\n\n        message.config({\n            top: '40%'\n        })\n    }\n\n    _refreshData = () => {\n        let { methodInfoList } = store.getState().methodReducer\n        this.setState({\n            methodCostList: methodInfoList\n        })\n    }\n\n    _filterMethod = () => {\n        var timeFilter = this.state.timeFilter;\n        var threadFilter = this.state.threadFilter;\n        if (timeFilter <= 0 && threadFilter <= 0 && !filterMethodTag) {\n            return this.state.methodCostList\n        } else {\n            let result = []\n            this.state.methodCostList.forEach(element => {\n                if (element.costTime > timeFilter) {\n                    var threadMode = element.isMainThread ? 1 : 2\n                    var threadFilterInt = parseInt(threadFilter)\n                    if (element.name.search(filterMethodTag) !== -1) {\n                        if (threadFilterInt <= 0 || threadFilterInt === threadMode) {\n                            result.push(element)\n                        }\n                    }\n                }\n            });\n            return result\n        }\n\n    }\n\n    componentWillUnmount() {\n        this.unsubscribe()\n    }\n\n    _getCostTimeColor = (costTime) => {\n        var color = '#52c41a'\n        if (costTime > timeLimit) {\n            color = '#ff0000'\n        }\n\n        return color\n    }\n\n    _handleTimeFilterChange = (value) => {\n        this.setState({\n            timeFilter: value\n        })\n    }\n\n    _handleThreadFilterChange = (value) => {\n        this.setState({\n            threadFilter: value\n        })\n    }\n\n    _clickStartMethodCost = () => {\n\n        var isShowStart = this.state.isStartState\n        if (isShowStart) {\n            store.dispatch(clearMethodCost())\n            Bus.emit('sendMsgToClient', '{\"moduleName\": \"StartMethodCost\"}');\n            message.loading('已开始统计全部插桩方法耗时，请开始操作手机...', 0);\n        } else {\n            message.destroy()\n            Bus.emit('sendMsgToClient', '{\"moduleName\": \"EndMethodCost\"}');\n            message.success('已结束统计方法耗时，正在输出全部方法耗时....');\n        }\n\n        this.setState({\n            isStartState: !this.state.isStartState\n        })\n    }\n\n    _filterMethodTag = (value) => {\n        filterMethodTag = value\n        this.setState({\n            methodCostList: this.state.methodCostList\n        })\n    }\n\n    render() {\n        var resultList = this._filterMethod()\n        var startBtnText = this.state.isStartState ? '开始方法耗时统计' : '结束方法耗时统计'\n        var startBtnType = this.state.isStartState ? 'danger' : 'primary'\n        return (\n            <div style={{ height: '100%' }}>\n                <div style={{ height: '50px' }}>\n\n                    <Button type={startBtnType}\n                        ghost\n                        style={{ marginLeft: 20, width: '150px' }}\n                        onClick={() => this._clickStartMethodCost()}>{startBtnText}</Button>\n\n                    <Select defaultValue=\"耗时筛选\" style={{ width: 150, marginLeft: 20 }} onChange={(value) => this._handleTimeFilterChange(value)}>\n                        <Option value=\"-1\"> 无筛选 </Option>\n                        <Option value=\"5\"> > 5ms </Option>\n                        <Option value=\"10\"> > 10ms </Option>\n                        <Option value=\"16\"> > 16ms</Option>\n                        <Option value=\"20\"> > 20ms</Option>\n                        <Option value=\"25\"> > 25ms</Option>\n                        <Option value=\"32\"> > 32ms</Option>\n                        <Option value=\"50\"> > 50ms</Option>\n                        <Option value=\"75\"> > 75ms</Option>\n                        <Option value=\"100\"> > 100ms</Option>\n                    </Select>\n\n                    <Select defaultValue=\"线程筛选\" style={{ width: 150, marginLeft: 20 }} onChange={(value) => this._handleThreadFilterChange(value)}>\n                        <Option value=\"-1\"> 全部线程 </Option>\n                        <Option value=\"1\">  主线程 </Option>\n                        <Option value=\"2\"> 非主线程 </Option>\n                    </Select>\n\n\n                    <Search\n                        style={{ marginLeft: 20, width: '300px' }}\n                        placeholder=\"输入方法名称\"\n                        onSearch={(value) => { this._filterMethodTag(value) }}\n                        enterButton />\n\n                    <Button type=\"primary\"\n                        style={{ marginLeft: 20, width: '80px' }}\n                        onClick={() => {\n                            store.dispatch(clearMethodCost())\n                        }}>清空</Button>\n                </div>\n                <div style={{ height: '100%', overflow: 'scroll' }}>\n                    <List\n                        style={{ marginTop: 15 }}\n                        itemLayout='vertical'\n                        dataSource={resultList}\n                        renderItem={\n                            (itemData, index) => (\n\n                                <List.Item\n                                    className='listItem'\n                                    key={index}\n                                >\n                                    <div style={{ width: '100%', height: '30px', display: 'flex', flexDirection: 'column', justifyContent: 'center' }}>\n                                        <div>\n                                            <div style={{ float: 'left', width: '90%' }}>\n                                                <span style={{ fontSize: 13, color: '#ACB4BF' }}>{itemData.isMainThread ? '[主线程]' : '[非主线程]'}</span>\n                                                <span style={{ fontSize: 15, color: '#0F294D' }}>{itemData.name}</span>\n                                            </div>\n                                            <div style={{ float: 'right', width: '10%' }}>\n                                                <Icon type={itemData.costTime <= timeLimit ? \"check-circle\" : \"exclamation-circle\"} theme=\"twoTone\" twoToneColor={itemData.costTime <= timeLimit ? \"#52c41a\" : \"#ff0000\"} style={{ marginRight: '10px' }} />\n                                                <span style={{ fontSize: 16, color: `${this._getCostTimeColor(itemData.costTime)}` }}>{itemData.costTime}ms</span>\n                                            </div>\n\n\n                                        </div>\n                                    </div>\n                                </List.Item>\n                            )\n                        } />\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default MethodCostLayout;","import React from 'react';\nimport { Layout } from 'antd';\nimport { Route } from 'react-router-dom'\nimport MethodCostLayout from '../components/MethodCostLayout'\n\nconst { Content, Footer } = Layout;\n\nconst RightContent = (props) => {\n\n    return (\n        <Layout>\n            <Content style={{ margin: '0 0' }}>\n                <div style={{ padding: 24, background: '#fff', height: '85vh',overflow:'hidden'}}>\n                    <Route exact path='/index.html' component={MethodCostLayout} />\n                </div>\n            </Content>\n            <Footer style={{ textAlign: 'center' }}>CopyRight©2019 DavidSu. All rights reserved.</Footer>\n        </Layout>\n    )\n}\n\nexport default RightContent\n\n","import React, { Component } from 'react';\nimport { Tag } from \"antd\";\nimport store from \"../store/index\";\n\nlet colors = ['magenta', 'blue', 'green', 'orange', 'lime', 'cyan']\nclass TagViews extends Component {\n    constructor(props) {\n        super(props);\n        let { AppInfo } = store.getState().methodReducer\n        this.state = {\n            tags: AppInfo\n        }\n\n        this.unsubscribe = store.subscribe(this._refreshData)\n\n    }\n\n    _refreshData = () => {\n        let { AppInfo } = store.getState().methodReducer\n        this.setState({\n            tags: AppInfo\n        })\n    }\n\n    componentWillUnmount() {\n        this.unsubscribe()\n    }\n\n    getTagViews = () => {\n        let tags = this.state.tags\n        let tagViews = []\n        let count = 0\n        if (tags) {\n            tags.forEach(element => {\n                let color = colors[count % colors.length]\n                tagViews.push(\n                    <Tag style={{ marginBottom: 8 }}\n                        color={color}>\n                        {element}\n                    </Tag>\n                )\n\n                count++\n            });\n        }\n\n        return tagViews\n    }\n\n    render() {\n        return (\n            <div style={{ marginLeft: 25, display: 'inline' }}>\n                {this.getTagViews()}\n            </div>\n        );\n    }\n}\n\nexport default TagViews;","import React, { Component } from 'react';\nimport websocketEngine from './websocket/WebscoketEngine'\nimport Mock from './Mock'\nimport { Layout, message } from 'antd';\nimport LeftSider from './widget/LeftSider'\nimport { BrowserRouter } from 'react-router-dom'\n\nimport RightContent from './widget/RightContent'\nimport store from \"./store/index\"\nimport { updateAppInfo, updateMethodCostInfo } from \"./store/actionCreators\";\nimport TagViews from './widget/TagViews';\nimport Bus from './event/eventBus'\n\nconst { Header } = Layout;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this._onReceiveMessage = this._onReceiveMessage.bind(this);\n    this.mock = new Mock();\n  }\n\n  componentDidMount() {\n    websocketEngine.setReceiveMessageCallback(this._onReceiveMessage);\n    websocketEngine.start(function (evt) {\n      websocketEngine.sendMessage('{\"moduleName\": \"OnlineMessage\"}')\n    });\n\n    // this._testData()\n\n    this._registerEventBus()\n  }\n\n  _registerEventBus = () => {\n    Bus.addListener('sendMsgToClient', (msg) => {\n      console.log(msg);\n      try {\n        websocketEngine.start(function (evt) {\n          websocketEngine.sendMessage(msg)\n        });\n      } catch (error) {\n        message.error('MethodTraceD与手机客户端未连接完毕，请稍后再试！')\n      }\n    });\n\n  }\n\n  componentWillUnmount() {\n    Bus.removeAllListeners()\n  }\n  _testData = () => {\n    setTimeout(() => {\n      this._onReceiveMessage(\"appInfo\", [\"机型：samsung SM-G9700\", \"系统版本：28\", \"包名：ctrip.english.debug\", \"App版本：7.1.0\", \"UID：E451995153\", \"ClientID：37002118410181244263\"]\n      )\n    }, 3000)\n\n    setTimeout(() => {\n      this._onReceiveMessage(\"methodCost\", [{\n        \"costTime\": 1.0,\n        \"endPos\": 3.0,\n        \"isMainThread\": true,\n        \"name\": \"com.ctrip.ibu.hotel.module.main.MainSearchInfoHelper.getInstance.()Lcom.ctrip.ibu.hotel.module.main.MainSearchInfoHelper;\",\n        \"startPos\": 0.0\n      }, {\n        \"costTime\": 15.0,\n        \"endPos\": 45.0,\n        \"isMainThread\": true,\n        \"name\": \"com.ctrip.ibu.hotel.module.main.HotelMainActivity.lambda$gotoHotelList$11.(IILandroid.content.Intent;)V\",\n        \"startPos\": 6.0\n      }, {\n        \"costTime\": 14.0,\n        \"endPos\": 44.0,\n        \"isMainThread\": true,\n        \"name\": \"com.ctrip.ibu.hotel.module.main.HotelMainPresenter.onHotelsActivityResult.(Landroid.content.Intent;)V\",\n        \"startPos\": 7.0\n      }, {\n        \"costTime\": 1.0,\n        \"endPos\": 19.0,\n        \"isMainThread\": true,\n        \"name\": \"com.ctrip.ibu.hotel.module.main.MainSearchInfoHelper.getAdultNum.()I\",\n        \"startPos\": 18.0\n      }, {\n        \"costTime\": 6.0,\n        \"endPos\": 41.0,\n        \"isMainThread\": true,\n        \"name\": \"com.ctrip.ibu.hotel.module.main.MainSearchInfoHelper.onRoomGuestChange.(IILjava.util.List;)V\",\n        \"startPos\": 30.0\n      },\n      {\n        \"costTime\": 1.0,\n        \"endPos\": 3.0,\n        \"isMainThread\": true,\n        \"name\": \"com.ctrip.ibu.hotel.module.main.MainSearchInfoHelper.getInstance.()Lcom.ctrip.ibu.hotel.module.main.MainSearchInfoHelper;\",\n        \"startPos\": 0.0\n      }, {\n        \"costTime\": 15.0,\n        \"endPos\": 45.0,\n        \"isMainThread\": true,\n        \"name\": \"com.ctrip.ibu.hotel.module.main.HotelMainActivity.lambda$gotoHotelList$11.(IILandroid.content.Intent;)V\",\n        \"startPos\": 6.0\n      }])\n    }, 5000)\n  }\n\n\n  _onReceiveMessage(moduleName, payload) {\n    switch (moduleName) {\n      case \"appInfo\":\n        store.dispatch(updateAppInfo(payload.appInfo))\n        break;\n      case \"methodCost\":\n        store.dispatch(updateMethodCostInfo(payload))\n        break;\n      default:\n        break;\n    }\n\n\n  }\n\n\n  render() {\n    return (\n      <Layout style={{ minHeight: '100vh' }}>\n        <Header style={{ paddingLeft: '10px' }}>\n          <span style={{ fontWeight: 'bolder', color: '#fff', fontSize: 30 }}>MethodTraceMan.</span>\n          <TagViews />\n        </Header>\n        <Layout>\n          <BrowserRouter>\n            <LeftSider />\n            <RightContent />\n          </BrowserRouter>\n        </Layout>\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}